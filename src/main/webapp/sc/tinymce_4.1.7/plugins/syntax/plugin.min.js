tinymce.PluginManager.add('syntax', function(editor) {

	$('#content_ifr').ready(function() {
		//window.onmousewheel=function(){return false;};
	});

	String.prototype.replaceAll = function(reallyDo, replaceWith, ignoreCase) {
	    if (!RegExp.prototype.isPrototypeOf(reallyDo)) {
	        return this.replace(new RegExp(reallyDo, (ignoreCase ? "gi": "g")), replaceWith);
	    } else {
	        return this.replace(reallyDo, replaceWith);
	    };
	};

    // Add a button that opens a window
    editor.addButton('syntax', {
        type: 'splitbutton',
        icon: 'syntax',
        tooltip: 'Syntax',
        onclick: function() {
            this.showMenu();
        },
        menu: [
            {text: 'Java', onclick: function() {
                editor.insertContent('<pre class="brush:java;"></pre>');
            }},
            {text: 'C/C++/Objective-C', onclick: function() {
                editor.insertContent('<pre class="brush:cpp;"></pre>');
            }},
            {text: 'C#', onclick: function() {
                editor.insertContent('<pre class="brush:c#;"></pre>');
            }},
            {text: 'JavaScript', onclick: function() {
                editor.insertContent('<pre class="brush:js;"></pre>');
            }},
            {text: 'PHP', onclick: function() {
                editor.insertContent('<pre class="brush:php;"></pre>');
            }},
            {text: 'Perl', onclick: function() {
                editor.insertContent('<pre class="brush:perl;"></pre>');
            }},
            {text: 'Python', onclick: function() {
                editor.insertContent('<pre class="brush:python;"></pre>');
            }},
            {text: 'Ruby', onclick: function() {
                editor.insertContent('<pre class="brush:ruby;"></pre>');
            }},
            {text: 'HTML', onclick: function() {
                editor.insertContent('<pre class="brush:html;"></pre>');
            }},
            {text: 'XML', onclick: function() {
                editor.insertContent('<pre class="brush:xml;"></pre>');
            }},
            {text: 'CSS', onclick: function() {
                editor.insertContent('<pre class="brush:css;"></pre>');
            }},
            {text: 'ASP/Basic', onclick: function() {
                editor.insertContent('<pre class="brush:vb;"></pre>');
            }},
            {text: 'Delphi/Pascal', onclick: function() {
                editor.insertContent('<pre class="brush:pascal;"></pre>');
            }},
            {text: 'Scala', onclick: function() {
                editor.insertContent('<pre class="brush:scala;"></pre>');
            }},
            {text: 'Groovy', onclick: function() {
                editor.insertContent('<pre class="brush:groovy;"></pre>');
            }},
            {text: 'Lua', onclick: function() {
                editor.insertContent('<pre class="brush:lua;"></pre>');
            }},
            {text: 'SQL', onclick: function() {
                editor.insertContent('<pre class="brush:sql;"></pre>');
            }},
            {text: 'Google Go', onclick: function() {
                editor.insertContent('<pre class="brush:cpp;"></pre>');
            }},
            {text: 'Flash/ActionScript/Flex', onclick: function() {
                editor.insertContent('<pre class="brush:as3;"></pre>');
            }},
            {text: 'WPF/SliverLight', onclick: function() {
                editor.insertContent('<pre class="brush:xml;"></pre>');
            }},
            {text: 'Shell/批处理', onclick: function() {
                editor.insertContent('<pre class="brush:shell;"></pre>');
            }}
        ]
	});
});
